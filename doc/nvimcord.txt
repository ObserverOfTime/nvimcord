*nvimcord.txt*         For NVIM v0.10.0         Last change: 2024 September 11

==============================================================================
Table of Contents                                 *nvimcord-table-of-contents*

1. Installation                                        |nvimcord-installation|
  - lazy.nvim                                |nvimcord-installation-lazy.nvim|
  - pckr.nvim                                |nvimcord-installation-pckr.nvim|
2. Configuration                                      |nvimcord-configuration|
  - Filetypes                               |nvimcord-configuration-filetypes|
3. Commands                                                |nvimcord-commands|
4. TODO                                                        |nvimcord-todo|
5. Assets                                                    |nvimcord-assets|
  - Sources                                          |nvimcord-assets-sources|
  - Palette                                          |nvimcord-assets-palette|
6. Alternatives                                        |nvimcord-alternatives|

==============================================================================
1. Installation                                        *nvimcord-installation*


LAZY.NVIM                                    *nvimcord-installation-lazy.nvim*

>lua
    {
      'ObserverOfTime/nvimcord',
      opts = {
        ...
      }
    }
<


PCKR.NVIM                                    *nvimcord-installation-pckr.nvim*

>lua
    {
      'ObserverOfTime/nvimcord',
      config = function()
        require('nvimcord').setup {
          ...
        }
      end
    }
<


==============================================================================
2. Configuration                                      *nvimcord-configuration*

These are the default values:

>lua
    -- Start the RPC manually (boolean)
    autostart = false
    
    -- Set the client ID (string)
    client_id = '954365489214291979'
    
    -- Update workspace on chdir (boolean)
    dynamic_workspace = false
    
    -- Use the filetype as the large icon (boolean)
    large_file_icon = true
    
    -- Set the log level (vim.log.levels.*)
    log_level = vim.log.levels.INFO
    
    -- Get the workspace name (function|string)
    workspace_name = function()
      return --[[git root or cwd basename]]
    end
    
    -- Get the workspace URL (function|string)
    workspace_url = function()
      return --[[git remote URL]]
    end
<

Options can also be configured using Vim variables.

This can be useful when using |exrc| or a project plugin.

>vim
    let g:nvimcord#autostart = v:false
    let g:nvimcord#client_id = '954365489214291979'
    let g:nvimcord#dynamic_workspace = v:false
    let g:nvimcord#large_file_icon = v:true
    let g:nvimcord#log_level = 2
    " NOTE: these can only be defined as strings
    let g:nvimcord#workspace_name = ''
    let g:nvimcord#workspace_url = ''
<


FILETYPES                                   *nvimcord-configuration-filetypes*

>lua
    local fts = require 'nvimcord.filetypes'
    
    -- NOTE: the asset can also be an image URL
    
    -- override options
    fts.filetype['vim'].name = 'Vim Script'
    fts.filetype['vim'].asset = 'neovim'
    
    -- new filetype
    fts.filetype['teal'] = {name = 'Teal', asset = 'lua'}
    
    -- new pattern
    fts.pattern['^%.gitkeep$'] = {name = 'git keep', asset = 'git'}
    
    -- ignore filetype
    fts.ignore.filetype['vim'] = true
    
    -- ignore filename
    fts.ignore.filename['init.vim'] = true
<


==============================================================================
3. Commands                                                *nvimcord-commands*


:NVIMCORDUPDATE ~

Start or update the rich presence.


:NVIMCORDSTOP ~

Stop the rich presence.


:NVIMCORDFILETYPES ~

List the supported filetypes.


:NVIMCORDASSETS ~

List the supported assets.


==============================================================================
4. TODO                                                        *nvimcord-todo*

- ☒ Ignore by filename
- ☐ Cache filename patterns
- ☒ Detect workspace through git
- ☒ Warn when pipe doesn’t exist
- ☐ Set idle status after some time


==============================================================================
5. Assets                                                    *nvimcord-assets*

The assets are available here <https://cloud.disroot.org/s/3HCpppopkrcR6iK>.


SOURCES                                              *nvimcord-assets-sources*

- file-icons/icons <https://github.com/file-icons/icons>
- file-icons/DevOpicons <https://github.com/file-icons/DevOpicons>
- file-icons/MFixx <https://github.com/file-icons/MFixx>
- primer/octicons <https://github.com/primer/octicons>


PALETTE                                              *nvimcord-assets-palette*

The icons use the basic colours from file-icons/atom
<https://github.com/file-icons/atom/blob/master/styles/colours.less#L10-L19>.


==============================================================================
6. Alternatives                                        *nvimcord-alternatives*

- amiralies/coc-discord <https://github.com/amiralies/coc-discord> (TypeScript)
- andweeb/presence.nvim <https://github.com/andweeb/presence.nvim> (Lua)
- aurieh/discord.nvim <https://github.com/aurieh/discord.nvim> (Remote Python)
    - or my own fork <https://github.com/ObserverOfTime/discord.nvim>
- Cyuria/discord.nvim <https://github.com/Cyuria/discord.nvim> (Lua + C++)
- GabeFrahm/vim-presence <https://github.com/GabeFrahm/vim-presence> (Python)
- goopey7/vdrpc <https://github.com/goopey7/vdrpc> (VimL + C)
- IogaMaster/neocord <https://github.com/IogaMaster/neocord> (Lua)
- LeonardSSH/coc-discord-rpc <https://github.com/LeonardSSH/coc-discord-rpc> (TypeScript)
- lpturmel/discord.nvim <https://github.com/lpturmel/discord.nvim> (Lua + Rust)
- SamJakob/coc-discord-presence <https://github.com/SamJakob/coc-discord-presence> (TypeScript)
- sardonicism-04/nvim-rich-presence <https://github.com/sardonicism-04/nvim-rich-presence> (VimL + Rust)
- Stoozy/vimcord <https://github.com/Stoozy/vimcord> Python
- TCL100K/vim-discord-rpc <https://github.com/TCL100K/vim-discord-rpc> (Python)
- vbe0201/vimdiscord <https://github.com/vbe0201/vimdiscord> (Python)
- vyfor/cord.nvim <https://github.com/vyfor/cord.nvim> (Lua + Rust)

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
